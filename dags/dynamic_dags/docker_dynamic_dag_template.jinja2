import os.path
from datetime import datetime, timedelta

from docker.types import Mount

from airflow import DAG
from airflow.decorators import task, dag
from airflow.operators.docker_operator import DockerOperator
from airflow.operators.dummy_operator import DummyOperator


default_args = {
    'owner'                 : 'airflow',
    'description'           : 'DockerOperator {{ description }}',
    'depend_on_past'        : False,
    'start_date'            : datetime(2022,4, 22),
    'email_on_failure'      : False,
    'email_on_retry'        : False,
    'retries'               : 0,
    'retry_delay'           : timedelta(minutes=1),
    'mount_tmp_dir'         : False,
}

with DAG(dag_id='generated_docker_dag_{{ dag_id }}',
    default_args=default_args,
    schedule_interval="{{ schedule_interval }}",
    catchup={{ catchup or False }} ) as dag:

    @task
    def dummy():
        pass

    # https://airflow.apache.org/docs/apache-airflow/1.10.13/_api/airflow/operators/docker_operator/index.html
    # https://github.com/apache/airflow/tree/main/airflow/providers/docker/example_dags
    task_docker = DockerOperator(
        task_id='docker_command',
        # image='ubuntu:latest',
        image='ptsim:latest',
        api_version='auto',
        auto_remove=True,
        environment={
            'MYHOME': "Universe",
            'PTSim_type': "{{ dag_id }}"
        },
        command=[
            "/bin/bash",
            "-c",
            "/bin/echo 'material:{{ params.material }} energy:{{ params.energy }}'; ",
            "env; ",
            ". /home/airflow/software/root/6.24.00/bin/thisroot.sh; ",
            "env; ",
            "root-config --cflags; ",
            "root.exe -a -q; ",
        ],
        # docker_url='unix://var/run/docker.sock',
        docker_url='tcp://docker-proxy:2375',
        network_mode='bridge',
        xcom_all=True,
        # retrieve_output=True,
        # retrieve_output_path='/data/log.txt',
        mounts=[
            Mount(source="/home/fdiblen/airflow", target="/data", type="bind"),
        ],
    )

    dummy() >> task_docker
